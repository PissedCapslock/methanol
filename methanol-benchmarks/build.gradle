import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
  id 'com.github.johnrengelman.shadow' version '6.0.0'
}

dependencies {
  annotationProcessor deps.jmhAnnotationProcessor
  implementation project(':methanol')
  implementation project(':methanol-jackson')
  implementation project(':methanol-brotli')
  implementation project(':methanol-testutils')
  implementation deps.mockWebServer
  implementation deps.jmhCore
  implementation deps.brotliDec
}

task jmhJar(type: ShadowJar) {
  dependsOn compileJava
  archivesBaseName = rootProject.getArtifactId(project)
  archiveClassifier = 'all'
  mergeServiceFiles()
  from sourceSets.main.runtimeClasspath
  exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
  manifest {
    attributes 'Main-Class': 'org.openjdk.jmh.Main'
  }
}

task jmh(type: JavaExec) {
  classpath = files(jmhJar)
  args('-foe', 'true')
  def additionalArgs = System.properties.jmhArgs
  if (additionalArgs) {
    if (additionalArgs.length() > 2
        && additionalArgs.startsWithAny("'", '"')
        && additionalArgs.endsWithAny("'", '"')) {
      additionalArgs = additionalArgs[1..additionalArgs.length() - 1]
    }
    args additionalArgs
  }
}

tasks.withType(JavaCompile) {
  options.errorprone {
    excludedPaths = '.*/build/generated/.*' // jmh generated code makes errorprone go nuts
  }
}
